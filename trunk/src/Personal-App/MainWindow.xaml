<Window x:Class="Personal_App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        xmlns:domain="clr-namespace:ST.Common.Domain;assembly=ST.Common"
        xmlns:domain1="clr-namespace:Personal_App.Domain"
        xmlns:personalApp="clr-namespace:Personal_App"
        xmlns:controlEx="clr-namespace:ST.Style.ControlEx;assembly=ST.Style"
        AllowsTransparency="True"
        x:Name="MetroWindowMain" Closing="MainWindow_Closing"  WindowStyle ="None" Topmost="{Binding ElementName=ChkTopmast, Path=IsChecked}"
        mc:Ignorable="d" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" MouseDown="MainLogin_OnMouseDown"
        Title="英语说" Height="768" Width="1024" MaxHeight="768" MaxWidth="1024" FontFamily="Microsoft YaHei" Activated="MainWindow_OnActivated" Loaded="MainWindow_OnLoaded">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ST.Style;component/ControlEx/ScrollViewerEx.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/ST.Style;component/ControlEx/CommonStyle.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/ST.Style;component/ControlEx/ButtonEx.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/ST.Style;component/ControlEx/ImageEx.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/ST.Style;component/ControlEx/PopupBoxEx.xaml"></ResourceDictionary>


            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="RoofActionToggleButton" TargetType="{x:Type ToggleButton}">
                <!--<Style.Resources>
                    <ResourceDictionary>
                        <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                            <Setter Property="Width" Value="{TemplateBinding Width}" />
                            <Setter Property="Height" Value="20" />
                        </Style>
                    </ResourceDictionary>
                </Style.Resources>-->
                <Setter Property="Foreground" Value="#537588"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <!--<Setter Property="materialDesign:ToggleButtonAssist.OnContent" Value="{StaticResource RoofChecked}" />-->
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid ClipToBounds="True">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.23" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="*" To="Checked">
                                                <Storyboard FillBehavior="HoldEnd">
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform">
                                                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
                                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform">
                                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="Checked" To="Unchecked">
                                                <Storyboard FillBehavior="HoldEnd">
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform">
                                                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
                                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform">
                                                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform"
                                                         To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform"
                                                         To="1" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform"
                                                         To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform"
                                                         To="0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="OffGrid" RenderTransformOrigin=".5,.5" Background="{TemplateBinding Background}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              FlowDirection="LeftToRight"/>
                                    <Grid.Clip>
                                        <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}" 
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                            <EllipseGeometry.Center>
                                                <MultiBinding Converter="{StaticResource PointValueConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Width" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                </MultiBinding>
                                            </EllipseGeometry.Center>
                                        </EllipseGeometry>
                                    </Grid.Clip>
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="OffScaleTransform" ScaleX="1" ScaleY="1" />
                                    </Grid.RenderTransform>
                                </Grid>
                                <Grid x:Name="OnGrid" RenderTransformOrigin=".5,.5" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              FlowDirection="LeftToRight"
                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.OnContent)}"
                                              ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ToggleButtonAssist.OnContentTemplate)}" />
                                    <Grid.Clip>
                                        <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}" 
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                            <EllipseGeometry.Center>
                                                <MultiBinding Converter="{StaticResource PointValueConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Width" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                </MultiBinding>
                                            </EllipseGeometry.Center>
                                        </EllipseGeometry>
                                    </Grid.Clip>
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="OnScaleTransform" ScaleX="0" ScaleY="1" />
                                    </Grid.RenderTransform>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<domain:DateTimeToIntConverter x:Key="dateTimeToIntConverter"/>-->
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <materialDesign:DialogHost Identifier="MainDialog" DialogMargin="1" Margin="0" Width="1024" Height="768">
            <Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="128"></ColumnDefinition>
                        <ColumnDefinition Width="800*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.Background>
                            <ImageBrush ImageSource="Resources/leftbar.png"></ImageBrush>
                        </Grid.Background>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="220"></RowDefinition>
                            <RowDefinition Height="300*"></RowDefinition>
                            <RowDefinition Height="160"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="28"></RowDefinition>
                                <RowDefinition Height="80"></RowDefinition>
                                <RowDefinition Height="32"></RowDefinition>
                                <RowDefinition Height="32"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1">
                                <controlEx:ImageButton HorizontalAlignment="Center" IconHeight="80" IconWidth="80" Command="{Binding OpenUserInfoWinCommand}" Style="{StaticResource ImgBtnStyle}" Icon="{Binding User.Avatar, FallbackValue=/Resources/UserAvatar_100.png, UpdateSourceTrigger=PropertyChanged}" FocusVisualStyle="{x:Null}" Focusable="False" CornerRadius="40"></controlEx:ImageButton>
                                <!--OpenUserInfoWinCommand-->
                                <!--<Image Margin="0" Width="80" Height="80" Stretch="UniformToFill" x:Name="AvatarImage1" Source="{Binding User.Avatar, FallbackValue=/Resources/background.png, UpdateSourceTrigger=PropertyChanged}" FocusVisualStyle="{x:Null}" Focusable="False">
                                    <Image.Clip>
                                        <EllipseGeometry RadiusX="38" RadiusY="38" Center="40, 40"></EllipseGeometry>
                                    </Image.Clip>
                                </Image>-->
                            </Grid>
                            <Grid Grid.Row="2">
                                <!--手机号-->
                                <TextBlock Text="{Binding User.UserName, FallbackValue=姓名, UpdateSourceTrigger=PropertyChanged}" TextTrimming="CharacterEllipsis" Style="{DynamicResource UserInfoTbStyle}"></TextBlock>
                            </Grid>
                            <Grid Grid.Row="3">
                                <!--年级信息-->
                                <!--<TextBlock Text="{Binding Classinfo.Class_name, FallbackValue=八年级, UpdateSourceTrigger=PropertyChanged}" TextTrimming="CharacterEllipsis" Style="{DynamicResource UserInfoTbStyle}"></TextBlock>-->
                            </Grid>
                            <Grid Grid.Row="4">
                                <!--横线-->
                                <!--<Separator Margin="10 0 10 0" Background="#b3c7c3" />-->
                                <Line  X1="0" Y1="24" X2="100" Y2="24" HorizontalAlignment="Center" Stroke="#b3c7c3" StrokeThickness="0.5"></Line>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="1">
                            <ListBox x:Name="MenuListBox" Width="128"  FontSize="16" Foreground="#b3c7c3"
                                 Style="{DynamicResource MenuToolListBox}" SelectedIndex="{Binding SelectedMenuShow, Mode=TwoWay, FallbackValue=0}">
                                <!--<ListViewItem Height="90" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="&#xe613;" FontFamily="{StaticResource IconFont}" FontSize="30" Margin="0"></TextBlock>
                                        <TextBlock Grid.Row="1" Text="作业" Tag="ListBox" Margin="0 8 0 0"></TextBlock>
                                    </Grid>
                                </ListViewItem>
                                <ListViewItem Height="90" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="&#xe600;" FontFamily="{StaticResource IconFont}" FontSize="30" Margin="0"></TextBlock>
                                        <TextBlock Grid.Row="1" Text="同步" Tag="ListBox" Margin="0 8 0 0"></TextBlock>
                                    </Grid>
                                </ListViewItem>
                                <ListViewItem Height="90" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="&#xe61a;" FontFamily="{StaticResource IconFont}" FontSize="30" Margin="0"></TextBlock>
                                        <TextBlock Grid.Row="1" Text="专项" Tag="ListBox" Margin="0 8 0 0"></TextBlock>
                                    </Grid>
                                </ListViewItem>
                                <ListViewItem Height="90" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="&#xe623;" FontFamily="{StaticResource IconFont}" FontSize="30" Margin="0"></TextBlock>
                                        <TextBlock Grid.Row="1" Text="模考" Tag="ListBox" Margin="0 8 0 0"></TextBlock>
                                    </Grid>
                                </ListViewItem>-->
                            </ListBox>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Line  X1="0" Y1="0" X2="100" Y2="0" HorizontalAlignment="Center" Stroke="#b3c7c3" StrokeThickness="0.5"></Line>
                            <!--<Image Source="{Binding QrCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0 20 0 0" Width="72" Height="72" HorizontalAlignment="Center" VerticalAlignment="Top"></Image>-->
                            <Image Source="/Resources/qrcode.png" Margin="0 20 0 0" Width="72" Height="72" HorizontalAlignment="Center" VerticalAlignment="Top"></Image>

                            <TextBlock Text="  扫码下载英语说APP" Margin="0 0 0 24" Width="74" Foreground="#F7F7F7" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Bottom" TextWrapping="Wrap"></TextBlock>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"></RowDefinition>
                            <RowDefinition Height="480*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBlock x:Name="TxtAPPName" Text="英语说" Style="{DynamicResource MainInfoTopTitleTbStyle}"></TextBlock>
                            <WrapPanel VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 12 10 0" MaxWidth="400">
                                <!--<CheckBox x:Name="ChbTopMast"  VerticalAlignment="Top" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignCheckBox}" Foreground="Black" Margin="0 3 20 0"  ToolTip="切换总是最前端显示">界面置顶显示</CheckBox>-->
                                <Button Margin="0 0 10 0" Style="{DynamicResource ButtonStyle}" Foreground="#537588" Command="{Binding ShowServiceDialog}" Width="50" ToolTip="客服信息" Visibility="{Binding ShowService, FallbackValue=Collapsed}" >
                                    <Button.Content>
                                        <WrapPanel>
                                            <!--<materialDesign:PackIcon Width="18" Height="18" Kind="Headset" />-->
                                            <TextBlock  Text="&#xe605;" FontFamily="{StaticResource IconFont}" FontSize="13" Margin="4" VerticalAlignment="Center"></TextBlock>
                                            <TextBlock Text="客服" VerticalAlignment="Center"></TextBlock>
                                        </WrapPanel>
                                    </Button.Content>
                                </Button>

                                <Button Margin="0 0 10 0" Style="{DynamicResource ButtonStyle}" Foreground="#537588" Click="ButtonBase_OnClick"  Width="50" ToolTip="更新客户端">
                                    <Button.Content>
                                        <WrapPanel>
                                            <!--<materialDesign:PackIcon Width="18" Height="18" Kind="Sync" />-->

                                            <TextBlock  Text="&#xe6b3;" FontFamily="{StaticResource IconFont}" FontSize="13" Margin="4" VerticalAlignment="Center"></TextBlock>
                                            <TextBlock Text="更新" VerticalAlignment="Center"></TextBlock>
                                        </WrapPanel>
                                    </Button.Content>
                                </Button>

                                <ToggleButton x:Name="ChkTopmast"
                                        Style="{StaticResource RoofActionToggleButton}"
                                        Width="66" Height="20" Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Left"
                                        Margin="0 0 10 0" Padding="0"
                                        ToolTip="切换总是最前端显示">
                                    <ToggleButton.Content>
                                        <WrapPanel>
                                            <TextBlock Text="&#xe6e0;" FontFamily="{StaticResource IconFont}" FontSize="15"
                                                           Margin="0 1 4 0" VerticalAlignment="Center" >
                                            </TextBlock>
                                            <TextBlock Text="置顶" FontSize="12" VerticalAlignment="Center"  HorizontalAlignment="Left" ></TextBlock>
                                        </WrapPanel>
                                    </ToggleButton.Content>
                                    <materialDesign:ToggleButtonAssist.OnContent>
                                        <WrapPanel>
                                            <TextBlock Text="&#xe63e;" FontFamily="{StaticResource IconFont}" FontSize="15"
                                                       Margin="0 1 4 0" VerticalAlignment="Center" >
                                            </TextBlock>
                                            <TextBlock Text="已置顶" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Left" ></TextBlock>
                                        </WrapPanel>
                                    </materialDesign:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <Line Y1="4" Y2="20" Stroke="#eaeaea" Margin="0 0 6 0"></Line>
                                <Button Margin="0 0 10 0" Style="{DynamicResource ButtonStyle}" Foreground="#537588" Command="{Binding MinimizeWindowCommand}" CommandParameter="{Binding ElementName=MetroWindowMain}" ToolTip="最小化">
                                    <materialDesign:PackIcon Width="20" Height="20" Kind="WindowMinimize" />
                                </Button>
                                <Button Margin="0"
                                Style="{DynamicResource ButtonStyle}" Foreground="#537588" Click="BtnClose_OnClick" CommandParameter="MainDialog" ToolTip="关闭 英语说">
                                    <materialDesign:PackIcon Width="20" Height="20" Kind="WindowClose" />
                                </Button>
                            </WrapPanel>
                        </Grid>
                        <!--<Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="141*"/>
                                <ColumnDefinition Width="307*"/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="TopBgImage" Margin="0" Stretch="Fill"  Source="Resources/topbg.png" Grid.ColumnSpan="2" />
                        </Grid>-->
                        <Grid Grid.Row="1" Background="Transparent" Margin="0">
                            <Border BorderBrush="Transparent" BorderThickness="0" Background="{DynamicResource GrayBrush10}" Margin="0"
                                CornerRadius="0">
                                <!--<ScrollViewer x:Name="MainContentSV"  Margin="0" Padding="0 6 0 6" Focusable="False">-->
                                <!--内容区域-->
                                <WrapPanel x:Name="MainContentPanel" Margin="16 10 0 2">
                                </WrapPanel>
                                <!--</ScrollViewer>-->
                            </Border>
                        </Grid>
                    </Grid>
                </Grid>
                <!--<Grid Margin="160 235 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="827" Height="66" Background="Transparent">
                    <Button BorderThickness="0" BorderBrush="Transparent" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Command="{Binding OpenPayBoxCommand}" Visibility="{Binding ShowPayBox, FallbackValue=Collapsed}" Width="827" Height="66" >
                        <Button.Background>
                            <ImageBrush ImageSource="Resources/CardTimeout.png"></ImageBrush>
                        </Button.Background>
                        <Button.Content>
                            <Grid>
                                <TextBlock Text="{Binding TxtCardTimeout, FallbackValue=学习卡将于2019-10-01到期}" FontSize="24" Foreground="White" HorizontalAlignment="Left" Margin="215 0 0 0"></TextBlock>
                            </Grid>
                        </Button.Content>
                    </Button>
                </Grid>-->
            </Grid>
        </materialDesign:DialogHost>
        <personalApp:LoadingOperationPromptPage LoadCirclesMargin="0"  
                                 LoadingTextFontSize="10" LoadingTextForeground="Red"
                                 CirclesBrush="Purple"
                                 x:Name="loadMask"  Visibility="{Binding ShowOperationloading, FallbackValue=Collapsed}" ></personalApp:LoadingOperationPromptPage>
    </Grid>
</Window>