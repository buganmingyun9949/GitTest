<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ST.Style.ControlEx">


    <Style x:Key="MicrophoneLevelTrackDiscreteRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Height" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Grid Canvas.Top="0">
                            <Polygon x:Name="ButtonPolygon" Stretch="Fill" Points="0,50 70,0 70,50" Stroke="Transparent"
                                     StrokeThickness="0" Fill="{TemplateBinding Background}" >
                            </Polygon>
                        </Grid>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CountDownProgressTrackDiscreteRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border x:Name="PART_SelectionRange" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" CornerRadius="5"                                 
                                                            Canvas.Top="0"
                                                            Width="{TemplateBinding ActualWidth}"></Border>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:ProcessHeightViewConverter x:Key="ProcessHeightViewConverter" />
    <Style x:Key="ExamCompleteProgressTrackDiscreteRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border x:Name="PART_SelectionRange" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" CornerRadius="{TemplateBinding Height,  Converter={StaticResource ProcessHeightViewConverter}}"                                 
                                                            Canvas.Top="0"
                                                            Width="{TemplateBinding ActualWidth}"></Border>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressTrackDiscreteRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Margin" Value="0 0 0 2"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border x:Name="PART_SelectionRange" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" CornerRadius="5 0 0 5"                                 
                                                            Canvas.Top="3"
                                                            Width="{TemplateBinding ActualWidth}"></Border>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ProgressTrackIncreaseRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Margin" Value="0 0 0 2"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border x:Name="PART_SelectionRange" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" CornerRadius="0 5 5 0"                                 
                                                            Canvas.Top="3"
                                                            Width="{TemplateBinding ActualWidth}"></Border>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MicrophoneLevelHorizontal" TargetType="{x:Type ProgressBar}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
            <Grid Margin="0">
                <Grid>
                    <Polygon x:Name="ButtonPolygon" Stretch="Fill" Points="0,50 70,0 70,50" Stroke="Transparent" StrokeThickness="0">
                        <Polygon.Fill>
                            <SolidColorBrush Color="{DynamicResource Gray10}" Opacity="0.8"/>
                        </Polygon.Fill>
                    </Polygon>
                </Grid>
                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Margin="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource MicrophoneLevelTrackDiscreteRepeatButton}" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" />
                    </Track.DecreaseRepeatButton>
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="CountDownProgressHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
            <Grid Margin="0">
                <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" HorizontalAlignment="Center" VerticalAlignment="Bottom" CornerRadius="5" Background="{DynamicResource GrayBrush6}">
                </Border>
                <!--<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" Grid.Row="1" />-->
                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Margin="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource CountDownProgressTrackDiscreteRepeatButton}" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" />
                    </Track.DecreaseRepeatButton>
                    <!--<Track.IncreaseRepeatButton >
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource ProgressTrackIncreaseRepeatButton}" Background="{DynamicResource GrayBrush10}"
                                      x:Name="IncreaseRepeatButton" />
                    </Track.IncreaseRepeatButton>-->
                    <!--<Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource ProgressDiscreteSliderThumb}"
                               VerticalAlignment="Center" />
                    </Track.Thumb>-->
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>


    <ControlTemplate x:Key="ExamCompleteProgressHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
            <Grid Margin="0">
                <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" HorizontalAlignment="Center" VerticalAlignment="Bottom" CornerRadius="5" Background="{DynamicResource GrayBrush6}">
                </Border>
                <!--<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" Grid.Row="1" />-->
                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Margin="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource ExamCompleteProgressTrackDiscreteRepeatButton}" Background="{TemplateBinding Foreground}" Height="{TemplateBinding Height}" />
                    </Track.DecreaseRepeatButton>
                    <!--<Track.IncreaseRepeatButton >
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource ProgressTrackIncreaseRepeatButton}" Background="{DynamicResource GrayBrush10}"
                                      x:Name="IncreaseRepeatButton" />
                    </Track.IncreaseRepeatButton>-->
                    <!--<Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource ProgressDiscreteSliderThumb}"
                               VerticalAlignment="Center" />
                    </Track.Thumb>-->
                </Track>
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- ProgressDiscreteSlider Begin -->
    <ControlTemplate x:Key="ProgressDiscreteSliderThumb" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Width="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Viewbox x:Name="Pin" RenderTransformOrigin=".5,1">
                <Grid Width="20" Height="40">
                    <Path Data="M13.437011,33.065002 C9.7268463,29.334181 7.812011,26.379009 4.874511,23.379009 1.687011,19.566509 0.12600673,17.206803 5.6843419E-14,14.127608 0.062010996,2.0027046 11.158781,-0.062991121 13.43702,0.0014351187 M13.438011,33.065016 C17.148173,29.334199 19.063008,26.379023 22.00051,23.379017 25.188007,19.566519 26.749013,17.206806 26.875018,14.127613 26.813007,2.002704 15.716239,-0.062987381 13.438,0.0014388781"
                          Fill="{TemplateBinding Foreground}"
                          Grid.Row="0" Margin="-3,2,-8,4" />
                    <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Slider}, Path=Value}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               FontWeight="Normal" FontSize="12"
                               Margin="-6 -6 -5 0"/>
                </Grid>
                <Viewbox.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0" ScaleY="0" />
                        <TranslateTransform Y="4" />
                    </TransformGroup>
                </Viewbox.RenderTransform>
            </Viewbox>
            <Grid Grid.Row="1" Margin="0 0 0 -1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="8" />
                </Grid.ColumnDefinitions>
                <Border Background="#30cc75" Height="8" Width="8"  CornerRadius="0 5 5 0" Grid.Column="0" ></Border>
                <Border Background="{DynamicResource GrayBrush10}" Height="8" Width="8" CornerRadius="5 0 0 5" Grid.Column="1" ></Border>
            </Grid>
            <Ellipse x:Name="shadow" 
                                                 Grid.Row="1"
                                                 Width="24" Height="24" Margin="-12"
                                                 Fill="Black"
                                                 Opacity=".0"
                                                 UseLayoutRounding="True" />
            <Ellipse x:Name="grip" Width="16" Height="16" Fill="{DynamicResource GrayBrush8}"
                     Grid.Row="1" Margin="-6"
                     UseLayoutRounding="True" RenderTransformOrigin=".5,.5">
                <Ellipse.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse x:Name="grip1" Width="16" Height="16" Fill="{DynamicResource WhiteColorBrush}"
                                                 Grid.Row="1" Margin="-6"
                                                 UseLayoutRounding="True" RenderTransformOrigin=".5,.5">
                <Ellipse.RenderTransform>
                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"></ScaleTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                             To=".26" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                             To=".0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                 To=".0" Duration="0:0:0.1" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="4" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.5" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.5" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                 Duration="0:0:0.1" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                                         To=".26" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                                         To=".0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ProgressSliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
            <Grid Margin="0 0 0 5">
                <Border Height="10" Width="{TemplateBinding Width}" HorizontalAlignment="Center" VerticalAlignment="Bottom" CornerRadius="5" Background="{DynamicResource TransparentWhiteBrush}">
                </Border>
                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" Grid.Row="1" />
                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Margin="0 0 0 2">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource ProgressTrackDiscreteRepeatButton}" Background="{TemplateBinding Foreground}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton >
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource ProgressTrackIncreaseRepeatButton}" Background="{DynamicResource GrayBrush8}"
                                      x:Name="IncreaseRepeatButton" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource ProgressDiscreteSliderThumb}"
                               VerticalAlignment="Center" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">

            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">

            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">

            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource GrayBrush8}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ProgressSliderEx" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Template" Value="{StaticResource ProgressSliderHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ProgressDiscreteSlider End -->

    <!-- VoiceVolumeSlider Begin -->
    <ControlTemplate x:Key="VoiceVolumeSliderExThumb" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center" Width="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Viewbox x:Name="Pin" RenderTransformOrigin=".5,1">
                <Grid Width="20" Height="40">
                    <Path Data="M13.437011,33.065002 C9.7268463,29.334181 7.812011,26.379009 4.874511,23.379009 1.687011,19.566509 0.12600673,17.206803 5.6843419E-14,14.127608 0.062010996,2.0027046 11.158781,-0.062991121 13.43702,0.0014351187 M13.438011,33.065016 C17.148173,29.334199 19.063008,26.379023 22.00051,23.379017 25.188007,19.566519 26.749013,17.206806 26.875018,14.127613 26.813007,2.002704 15.716239,-0.062987381 13.438,0.0014388781"
                          Fill="{TemplateBinding Foreground}"
                          Grid.Row="0" Margin="-3,2,-8,4" />
                    <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Slider}, Path=Value}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"
                               FontWeight="Normal" FontSize="12"
                               Margin="-6 -6 -5 0"/>
                </Grid>
                <Viewbox.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0" ScaleY="0" />
                        <TranslateTransform Y="4" />
                    </TransformGroup>
                </Viewbox.RenderTransform>
            </Viewbox>
            <Grid Grid.Row="1" Margin="0 0 0 -1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8" />
                    <ColumnDefinition Width="8" />
                </Grid.ColumnDefinitions>
                <Border Background="#FF6161" Height="8" Width="8"  CornerRadius="0 5 5 0" Grid.Column="0" ></Border>
                <Border Background="{DynamicResource GrayBrush10}" Height="8" Width="8" CornerRadius="5 0 0 5" Grid.Column="1" ></Border>
            </Grid>
            <Ellipse x:Name="shadow" Grid.Row="1" Width="24" Height="24" Margin="-12" Fill="Black" Opacity=".0" UseLayoutRounding="True" />
            <Ellipse x:Name="grip" Width="16" Height="16" Fill="{DynamicResource GrayBrush8}"
                     Grid.Row="1" Margin="-6"
                     UseLayoutRounding="True" RenderTransformOrigin=".5,.5">
                <Ellipse.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse x:Name="grip1" Width="16" Height="16" Fill="{DynamicResource WhiteColorBrush}" Grid.Row="1" Margin="-6" UseLayoutRounding="True" RenderTransformOrigin=".5,.5">
                <Ellipse.RenderTransform>
                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"></ScaleTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity" To=".26" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity" To=".0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                 To=".0" Duration="0:0:0.1" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="4" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleX">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.5" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grip" Storyboard.TargetProperty="RenderTransform.ScaleY">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1.5" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                 Duration="0:0:0.1" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Pin" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="4">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseInOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                                         To=".26" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="shadow" Storyboard.TargetProperty="Opacity"
                                                                         To=".0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VoiceVolumeSliderExHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="True">
            <Grid Margin="0 0 0 5">
                <Border Height="10" Width="{TemplateBinding Width}" HorizontalAlignment="Center" VerticalAlignment="Bottom" CornerRadius="5" Background="{DynamicResource TransparentWhiteBrush}">
                </Border>
                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Visibility="Hidden" Grid.Row="1" />
                <Track x:Name="PART_Track" OpacityMask="{x:Null}" Margin="0 0 0 2">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource ProgressTrackDiscreteRepeatButton}" Background="{TemplateBinding Foreground}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton >
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource ProgressTrackIncreaseRepeatButton}" Background="{DynamicResource GrayBrush8}" x:Name="IncreaseRepeatButton" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource VoiceVolumeSliderExThumb}"
                               VerticalAlignment="Center" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">

            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">

            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">

            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="IncreaseRepeatButton" Value="{DynamicResource GrayBrush8}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="VoiceVolumeSliderEx" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Template" Value="{StaticResource VoiceVolumeSliderExHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- VoiceVolumeSlider End -->

    <Style x:Key="CountDownProgress" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Template" Value="{StaticResource CountDownProgressHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MicrophoneLevelProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Height" Value="32"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Template" Value="{StaticResource MicrophoneLevelHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExamCompleteProgress" TargetType="{x:Type Slider}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsSnapToTickEnabled" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Template" Value="{StaticResource ExamCompleteProgressHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>