<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Framework.Network.HttpHelper</name>
    </assembly>
    <members>
        <member name="T:Framework.Network.HttpHelper.BaseBll.HttpHelperBll">
            <summary>
            具体实现方法  
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.BaseBll.HttpHelperBll.httpbase">
            <summary>
            Httphelper原始访问类对象
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.BaseBll.HttpHelperBll.GetHtml(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            根据相传入的数据，得到相应页面数据
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.BaseBll.HttpHelperBll.GetImage(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            根据Url获取图片
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回图片</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.BaseBll.HttpHelperBll.FastRequest(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            快速Post数据这个访求与GetHtml一样，只是不接收返回数据，只做提交。
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Base.HttphelperBase">
            <summary>
            Http连接操作帮助类  
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.GetHtml(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            根据相传入的数据，得到相应页面数据
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.FastRequest(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            快速Post数据这个访求与GetHtml一样，只是不接收返回数据，只做提交。
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.GetData(Framework.Network.HttpHelper.HttpItem,Framework.Network.HttpHelper.HttpResult)">
            <summary>
            获取数据的并解析的方法
            </summary>
            <param name="item"></param>
            <param name="result"></param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetResultByte(Framework.Network.HttpHelper.HttpItem,Framework.Network.HttpHelper.HttpResult,System.Byte[])">
            <summary>
            设置返回的Byte
            </summary>
            <param name="item">HttpItem</param>
            <param name="result">result</param>
            <param name="enByte">byte</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetEncoding(Framework.Network.HttpHelper.HttpItem,Framework.Network.HttpHelper.HttpResult,System.Byte[])">
            <summary>
            设置编码
            </summary>
            <param name="item">HttpItem</param>
            <param name="result">HttpResult</param>
            <param name="ResponseByte">byte[]</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.GetByte(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            提取网页Byte
            </summary>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetRequest(Framework.Network.HttpHelper.HttpItem)">
             <summary>
             为请求准备参数
             </summary>
            <param name="item">参数列表</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetCer(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            设置证书
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetCerList(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            设置多个证书
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetCookie(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            设置Cookie
            </summary>
            <param name="item">Http参数</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetPostData(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            设置Post数据
            </summary>
            <param name="item">Http参数</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.SetProxy(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            设置代理
            </summary>
            <param name="item">参数对象</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            回调验证证书问题
            </summary>
            <param name="sender">流对象</param>
            <param name="certificate">证书</param>
            <param name="chain">X509Chain</param>
            <param name="errors">SslPolicyErrors</param>
            <returns>bool</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Base.HttphelperBase.BindIPEndPointCallback(System.Net.ServicePoint,System.Net.IPEndPoint,System.Int32)">
            <summary>
            通过设置这个属性，可以在发出连接的时候绑定客户端发出连接所使用的IP地址。 
            </summary>
            <param name="servicePoint"></param>
            <param name="remoteEndPoint"></param>
            <param name="retryCount"></param>
            <returns></returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Enum.AType">
            <summary>
            A链接的类型  
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.AType.Text">
            <summary>
            文本链接(默认)
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.AType.Img">
            <summary>
            图片链接
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Enum.PostDataType">
            <summary>
            Post的数据格式默认为string  
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.PostDataType.String">
            <summary>
            字符串类型，这时编码Encoding可不设置
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.PostDataType.Byte">
            <summary>
            Byte类型，需要设置PostdataByte参数的值编码Encoding可设置为空
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.PostDataType.FilePath">
            <summary>
            传文件，Postdata必须设置为文件的绝对路径，必须设置Encoding的值
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Enum.ResultCookieType">
            <summary>
            Cookie返回类型  
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.ResultCookieType.String">
            <summary>
            只返回字符串类型的Cookie
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.ResultCookieType.CookieCollection">
            <summary>
            CookieCollection格式的Cookie集合同时也返回String类型的cookie
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.ResultCookieType.CookieContainer">
            <summary>
            CookieContainer 多纬度Cookie
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Enum.ResultType">
            <summary>
            返回类型  
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.ResultType.String">
            <summary>
            表示只返回字符串 只有Html有数据,ResultByte为空
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.ResultType.Byte">
            <summary>
            表示只返回字符串 只有ResultByte有数据,Html为空
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Enum.ResultType.StringByte">
            <summary>
            表示返回字符串和字节流 ResultByte和Html都有数据返回
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.Base64Helper">
            <summary>
            Base64帮助类
            编码人：苏飞
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.Base64Helper.Base64ToString(System.String,System.Text.Encoding)">
            <summary>
            将Base64编码解析成字符串
            </summary>
            <param name="strbase">要解码的string字符</param>
            <param name="encoding">字符编码方案</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.Base64Helper.StringToBase64(System.Byte[])">
            <summary>
            将字节数组为Base64编码
            </summary>
            <param name="bytebase">要编码的byte[]</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.Base64Helper.StringToBase64(System.String,System.Text.Encoding)">
            <summary>
            将字符串转为Base64编码
            </summary>
            <param name="str">要编码的string字符</param>
            <param name="encoding">字符编码方案</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.EncodingHelper.ByteToString(System.Byte[],System.Text.Encoding)">
            <summary>
            将字节数组转为字符串
            </summary>
            <param name="b">字节数组</param>
            <param name="e">编码，默认为Default</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.EncodingHelper.StringToByte(System.String,System.Text.Encoding)">
            <summary>
            将字符串转为字节数组
            </summary>
            <param name="s">字符串</param>
            <param name="e">编码，默认为Default</param>
            <returns></returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.ExecJsHelper">
            <summary>
            用户执行JS的方法  
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.ExecJsHelper.JavaScriptEval(System.String,System.String)">
            <summary>
            直接调用JS方法并获取返回的值
            </summary>
            <param name="strJs">要执行的JS代码</param>
            <param name="main">要调用的方法名</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.ExecJsHelper.SetScriptControlType(System.String,System.Object)">
            <summary>
            获取ScriptControl接口类
            </summary>
            <param name="strJs">JS</param>
            <param name="obj">对象</param>
            <returns>Type</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.ExecJsHelper.GetScriptControl">
            <summary>
            获取ScriptControl接口对象
            </summary>
            <returns>ScriptControl对象</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.HtmlHelper">
            <summary>
            Html操作相关  
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HtmlHelper.GetAList(System.String)">
            <summary>
            获取所有的A链接
            </summary>
            <param name="html">要分析的Html代码</param>
            <returns>返回一个List存储所有的A标签</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HtmlHelper.GetImgList(System.String)">
            <summary>
            获取所有的Img标签
            </summary>
            <param name="html">要分析的Html代码</param>
            <returns>返回一个List存储所有的Img标签</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HtmlHelper.StripHTML(System.String)">
            <summary>
            过滤html标签
            </summary>
            <param name="html">html的内容</param>
            <returns>处理后的文本</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HtmlHelper.ReplaceNewLine(System.String)">
            <summary>
            过滤html中所有的换行符号
            </summary>
            <param name="html">html的内容</param>
            <returns>处理后的文本</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HtmlHelper.GetBetweenHtml(System.String,System.String,System.String)">
            <summary>
            提取Html字符串中两字符之间的数据
            </summary>
            <param name="html">源Html</param>
            <param name="s">开始字符串</param>
            <param name="e">结束字符串</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HtmlHelper.GetHtmlTitle(System.String)">
            <summary>
            提取网页Title
            </summary>
            <param name="html">Html</param>
            <returns>返回Title</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.HttpCookieHelper">
            <summary>
            Cookie操作帮助类 
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpCookieHelper.GetSmallCookie(System.String)">
            <summary>
            根据字符生成Cookie和精简串，将排除path,expires,domain以及重复项
            </summary>
            <param name="strcookie">Cookie字符串</param>
            <returns>精简串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpCookieHelper.StrCookieToCookieCollection(System.String)">
            <summary>
            将字符串Cookie转为CookieCollection
            </summary>
            <param name="strcookie">Cookie字符串</param>
            <returns>List-CookieItem</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpCookieHelper.CookieCollectionToStrCookie(System.Net.CookieCollection)">
            <summary>
            将CookieCollection转为字符串Cookie
            </summary>
            <param name="cookie">Cookie字符串</param>
            <returns>strcookie</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpCookieHelper.GetMergeCookie(System.String,System.String)">
            <summary>
            自动合并两个Cookie的值返回更新后结果 
            </summary>
            <param name="cookie1">Cookie1</param>
            <param name="cookie2">Cookie2</param>
            <returns>返回更新后的Cookie</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.HttpUrlHelper">
            <summary>
            和Url相关的帮助方法  
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpUrlHelper.URLDecode(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码对象将 URL 编码的字符串转换为已解码的字符串。
            </summary>
            <param name="text">指定的字符串</param>
            <param name="encoding">指定编码默认为Default</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpUrlHelper.URLEncode(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码对象对 URL 字符串进行编码。
            </summary>
            <param name="text">指定的字符串</param>
            <param name="encoding">指定编码默认为Default</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpUrlHelper.GetNameValueCollection(System.String)">
            <summary>
            将Url参数字符串转为一个Key和Value的集合
            </summary>
            <param name="str">要转为集合的字符串</param>
            <returns>NameValueCollection</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpUrlHelper.GetUrlHost(System.String)">
            <summary>
            提取网站主机部分就是host
            </summary>
            <param name="url">url</param>
            <returns>host</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpUrlHelper.GetUrlIp(System.String)">
            <summary>
            提取网址对应的IP地址
            </summary>
            <param name="url">url</param>
            <returns>返回Url对应的IP地址</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.HttpUrlHelper.getNowURL(System.Int32)">
            <summary>
            获取当前页面的URL（五个数字可选 1~5 ）
            </summary>
            <param name="selectNO">1完整url,2域名之后,3域名之后不含参数,4只有域名,5获取参数</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.ImageHelper.ByteToImage(System.Byte[])">
            <summary>
            将字节数组转为图片
            </summary>
            <param name=" b">字节数组</param>
            <returns>返回图片</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.JsonHelper">
            <summary>
            Json操作对象  
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.JsonHelper.JsonToObject``1(System.String)">
            <summary>
            将指定的Json字符串转为指定的T类型对象 
            </summary>
            <param name="jsonstr">字符串</param>
            <returns>转换后的对象，失败为Null</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.JsonHelper.ObjectToJson(System.Object)">
            <summary>
            将指定的对象转为Json字符串
            </summary>
            <param name="obj">对象</param>
            <returns>转换后的字符串失败为空字符串</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.Helper.MD5Helper">
            <summary>
            md5操作相关  
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.MD5Helper.ToMD5_32(System.String)">
            <summary>
            传入明文，返回用MD5加密后的字符串
            </summary>
            
            <param name="str">要加密的字符串</param>
            <returns>MD5加密后的字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.Helper.MD5Helper.ToSHA1(System.String)">
            <summary>
            传入明文，返回用SHA1密后的字符串
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>SHA1加密后的字符串</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.ResultHandler">
            <summary>
            gethtml方法异步调用的委托
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.HttpHelper">
            <summary>
            Http帮助类  
            版本：2.2.0
            作者：
            更新时间：2018
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.HttpHelper.bll">
            <summary>
            HttpHelperBLL
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.HttpHelper.GethtmlHandler">
            <summary>
            gethtml方法异步调用的委托
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="F:Framework.Network.HttpHelper.HttpHelper.resultheadler">
            <summary>
            异步调用方法委托
            </summary>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetHtml(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            根据相传入的数据，得到相应页面数据
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.BeginInvokeGetHtml(Framework.Network.HttpHelper.HttpItem,Framework.Network.HttpHelper.ResultHandler)">
            <summary>
            GetHtml方法的异步调用方式，根据相传入的数据，得到相应页面数据
            </summary>
            <param name="item">参数类对象</param>
            <param name="resultMainName">回调的方法名</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.CallbackFunc(System.IAsyncResult)">
            <summary>
            内部回调方法
            </summary>
            <param name="resultType">返回值</param>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetImage(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            根据Url获取图片
            </summary>
            <param name="item">HttpItem参数</param>
            <returns>返回图片，错误为NULL</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.FastRequest(Framework.Network.HttpHelper.HttpItem)">
            <summary>
            快速请求方法FastRequest（极速请求不接收数据,只做提交）不返回Header、Cookie、Html
            </summary>
            <param name="item">参数类对象</param>
            <returns>返回HttpResult类型</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetSmallCookie(System.String)">
            <summary>
            根据字符生成Cookie和精简串，将排除path,expires,domain以及重复项
            </summary>
            <param name="strcookie">Cookie字符串</param>
            <returns>精简串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.StrCookieToCookieCollection(System.String)">
            <summary>
            将字符串Cookie转为CookieCollection
            </summary>
            <param name="strcookie">Cookie字符串</param>
            <returns>List-CookieItem</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.CookieCollectionToStrCookie(System.Net.CookieCollection)">
            <summary>
            将CookieCollection转为字符串Cookie
            </summary>
            <param name="cookie">Cookie字符串</param>
            <returns>strcookie</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetMergeCookie(System.String,System.String)">
            <summary>
            自动合并两个Cookie的值返回更新后结果 
            </summary>
            <param name="cookie1">Cookie1</param>
            <param name="cookie2">Cookie2</param>
            <returns>返回更新后的Cookie</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.URLDecode(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码对象将 URL 编码的字符串转换为已解码的字符串。
            </summary>
            <param name="text">指定的字符串</param>
            <param name="encoding">指定编码默认为Default</param>
            <returns>解码后字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.URLEncode(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码对象对 URL 字符串进行编码。
            </summary>
            <param name="text">指定的字符串</param>
            <param name="encoding">指定编码默认为Default</param>
            <returns>转码后字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetNameValueCollection(System.String)">
            <summary>
            将Url参数字符串转为一个Key和Value的集合
            </summary>
            <param name="str">要转为集合的字符串</param>
            <returns>NameValueCollection</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetUrlHost(System.String)">
            <summary>
            提取网站主机部分就是host
            </summary>
            <param name="url">url</param>
            <returns>host</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetUrlIp(System.String)">
            <summary>
            提取网址对应的IP地址
            </summary>
            <param name="url">url</param>
            <returns>返回Url对应的IP地址</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.ToMD5(System.String)">
            <summary>
            传入明文，返回用MD%加密后的字符串32位长度
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>用MD5加密后的字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.ToSHA1(System.String)">
            <summary>
            传入明文，返回用SHA1密后的字符串
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>SHA1加密后的字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.JsonToObject``1(System.String)">
            <summary>
            将指定的Json字符串转为指定的T类型对象 
            </summary>
            <param name="jsonstr">字符串</param>
            <returns>转换后的对象，失败为Null</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.ObjectToJson(System.Object)">
            <summary>
            将指定的对象转为Json字符串
            </summary>
            <param name="obj">对象</param>
            <returns>转换后的字符串失败为空字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetAList(System.String)">
            <summary>
            获取所有的A链接
            </summary>
            <param name="html">要分析的Html代码</param>
            <returns>返回一个List存储所有的A标签</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetImgList(System.String)">
            <summary>
            获取所有的Img标签
            </summary>
            <param name="html">要分析的Html代码</param>
            <returns>返回一个List存储所有的Img标签</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.StripHTML(System.String)">
            <summary>
            过滤html标签
            </summary>
            <param name="html">html的内容</param>
            <returns>处理后的文本</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.ReplaceNewLine(System.String)">
            <summary>
            过滤html中所有的换行符号
            </summary>
            <param name="html">html的内容</param>
            <returns>处理后的文本</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetBetweenHtml(System.String,System.String,System.String)">
            <summary>
            提取Html字符串中两字符之间的数据
            </summary>
            <param name="html">源Html</param>
            <param name="s">开始字符串</param>
            <param name="e">结束字符串</param>
            <returns></returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetHtmlTitle(System.String)">
            <summary>
            提取网页Title
            </summary>
            <param name="html">Html</param>
            <returns>返回Title</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.JavaScriptEval(System.String,System.String)">
            <summary>
            直接调用JS方法并获取返回的值
            </summary>
            <param name="strJs">要执行的JS代码</param>
            <param name="main">要调用的方法名</param>
            <returns>执行结果</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.GetImage(System.Byte[])">
            <summary>
            将字节数组转为图片
            </summary>
            <param name=" b">字节数组</param>
            <returns>返回图片</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.ByteToString(System.Byte[],System.Text.Encoding)">
            <summary>
            将字节数组转为字符串
            </summary>
            <param name="b">字节数组</param>
            <param name="e">编码，默认为Default</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.StringToByte(System.String,System.Text.Encoding)">
            <summary>
            将字符串转为字节数组
            </summary>
            <param name="s">字符串</param>
            <param name="e">编码，默认为Default</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.Base64ToString(System.String,System.Text.Encoding)">
            <summary>
            将Base64编码解析成字符串
            </summary>
            <param name="strbase">要解码的string字符</param>
            <param name="encoding">字符编码方案</param>
            <returns>字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.ByteToBase64(System.Byte[])">
            <summary>
            将字节数组为Base64编码
            </summary>
            <param name="bytebase">要编码的byte[]</param>
            <returns>base字符串</returns>
        </member>
        <member name="M:Framework.Network.HttpHelper.HttpHelper.StringToBase64(System.String,System.Text.Encoding)">
            <summary>
            将字符串转为Base64编码
            </summary>
            <param name="str">要编码的string字符</param>
            <param name="encoding">字符编码方案</param>
            <returns>base字符串</returns>
        </member>
        <member name="T:Framework.Network.HttpHelper.HttpItem">
            <summary>
            Http请求参考类  
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.URL">
            <summary>
            请求URL必须填写
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Method">
            <summary>
            请求方式默认为GET方式,当为POST方式时必须设置Postdata的值
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Timeout">
            <summary>
            默认请求超时时间
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ReadWriteTimeout">
            <summary>
            默认写入和读取Post数据超时间
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Host">
            <summary>
            设置Host的标头信息
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.KeepAlive">
            <summary>
             获取或设置一个值，该值指示是否与 Internet 资源建立持久性连接默认为true。
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Accept">
            <summary>
            请求标头值 默认为text/html, application/xhtml+xml, */*
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ContentType">
            <summary>
            请求返回类型默认 text/html
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.UserAgent">
            <summary>
            客户端访问信息默认Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Referer">
            <summary>
            来源地址，上次访问地址
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ProtocolVersion">
            <summary>
              获取或设置用于请求的 HTTP 版本。返回结果:用于请求的 HTTP 版本。默认为 System.Net.HttpVersion.Version11。
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Expect100Continue">
            <summary>
             获取或设置一个 System.Boolean 值，该值确定是否使用 100-Continue 行为。如果 POST 请求需要 100-Continue 响应，则为 true；否则为 false。默认值为 true。
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.MaximumAutomaticRedirections">
            <summary>
            设置请求将跟随的重定向的最大数目
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.IfModifiedSince">
            <summary>
            获取和设置IfModifiedSince，默认为当前日期和时间
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.IsGzip">
            <summary>
             是否执行Gzip解压 默认为否
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Encoding">
            <summary>
            返回数据编码默认为NUll,可以自动识别,一般为utf-8,gbk,gb2312
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.PostEncoding">
            <summary>
            设置或获取Post参数编码,默认的为Default编码
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.PostDataType">
            <summary>
            Post的数据类型
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Postdata">
            <summary>
            Post请求时要发送的字符串Post数据
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.PostdataByte">
            <summary>
            Post请求时要发送的Byte类型的Post数据
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Cookie">
            <summary>
            请求时的Cookie
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.AutoRedirectCookie">
            <summary>
            请求时当设置allowautoredirect=true时是否自动处理Cookie
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ResultCookieType">
            <summary>
            设置返回/输入Cookie类型,默认的是只返回/输入字符串类型Cookie
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.IsUpdateCookie">
            <summary>
            是否自动将Cookie自动更新为请求所获取的新Cookie值  默认为False
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.CookieContainer">
            <summary>
            Cookie对象的集合容器 模式Cookie，可容纳N个CookieCollection对象
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.CerPath">
            <summary>
            证书绝对路径
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.CerPwd">
            <summary>
            证书密码
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ClentCertificates">
            <summary>
            设置509证书集合
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ICredentials">
            <summary>
            获取或设置请求的身份验证信息。
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.IsToLower">
            <summary>
            是否设置为全文小写，默认为不转化
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Allowautoredirect">
            <summary>
            支持跳转页面，查询结果将是跳转后的页面，默认是不跳转
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Connectionlimit">
            <summary>
            最大连接数
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.WebProxy">
            <summary>
            设置代理对象，不想使用IE默认配置就设置为Null，而且不要设置ProxyIp
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ProxyUserName">
            <summary>
            代理Proxy 服务器用户名
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ProxyPwd">
            <summary>
            代理 服务器密码
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ProxyIp">
            <summary>
            代理 服务IP,如果要使用IE代理就设置为ieproxy
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.ResultType">
            <summary>
            设置返回类型String和Byte
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.Header">
            <summary>
            header对象
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.IPEndPoint">
             <summary>
             设置本地的出口ip和端口
             </summary>]
             <example>
            item.IPEndPoint = new IPEndPoint(IPAddress.Parse("192.168.1.1"),80);
             </example>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.SecurityProtocol">
            <summary>
            当出现“请求被中止: 未能创建 SSL/TLS 安全通道”时需要配置此属性 
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpItem.IsReset">
            <summary>
            是否重置request,response的值，默认不重置，当设置为True时request,response将被设置为Null
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.HttpResult">
            <summary>
            Http返回参数类  
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.Cookie">
            <summary>
            Http请求返回的Cookie
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.CookieCollection">
            <summary>
            Cookie对象集合
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.Html">
            <summary>
            返回的String类型数据 只有ResultType.String时才返回数据，其它情况为空
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.ResultByte">
            <summary>
            返回的Byte数组 只有ResultType.Byte时才返回数据，其它情况为空
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.Header">
            <summary>
            header对象
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.StatusDescription">
            <summary>
            返回状态说明
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.StatusCode">
            <summary>
            返回状态码,默认为OK
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.ResponseUri">
            <summary>
            最后访问的URl
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.RedirectUrl">
            <summary>
            获取重定向的URl
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.HttpResult.item">
            <summary>
            HttpItem类，用于存储实际执行所用到的HttpItem对象
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Item.AItem">
            <summary>
            A连接对象  
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.AItem.Href">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.AItem.Text">
            <summary>
            链接文本
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.AItem.Img">
            <summary>
            链接的图片，如果是文本链接则为空
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.AItem.Html">
            <summary>
            整个连接Html
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.AItem.Type">
            <summary>
            A链接的类型
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Item.ImgItem">
            <summary>
            图片对象  
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.ImgItem.Src">
            <summary>
            图片网址
            </summary>
        </member>
        <member name="P:Framework.Network.HttpHelper.Item.ImgItem.Html">
            <summary>
            图片标签Html
            </summary>
        </member>
        <member name="T:Framework.Network.HttpHelper.Static.RegexString">
            <summary>
            正则表达式静态类
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.Alist">
            <summary>
            获取所有的A链接
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.ImgList">
            <summary>
            获取所有的Img标签
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.Nscript">
            <summary>
            所有的Nscript
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.Style">
            <summary>
            所有的Style
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.Script">
            <summary>
            所有的Script
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.Html">
            <summary>
            所有的Html
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.NewLine">
            <summary>
            换行符号
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.Enconding">
             <summary>
            获取网页编码
             </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.AllHtml">
            <summary>
            所有Html
            </summary>
        </member>
        <member name="F:Framework.Network.HttpHelper.Static.RegexString.HtmlTitle">
            <summary>
            title
            </summary>
        </member>
    </members>
</doc>
